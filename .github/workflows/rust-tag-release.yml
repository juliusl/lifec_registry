name: Rust

on:
  push:
    branches: [ "main" ]
    tags: v*

env:
  CARGO_TERM_COLOR: always

jobs:
  build_1804:
    name: Build Ubuntu-18.04
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    steps:
    - uses: actions/checkout@v3
    - name: Install deps
      run: |
        apt-get update
        apt-get upgrade -y
        apt-get install curl libssl-dev build-essential pkg-config -y
        export CARGO_HOME=/github/home/.cargo
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        . "/github/home/.cargo/env"
        cargo version
        cargo test --verbose
        cargo install cargo-deb
        cargo deb --output "target/debian/acr-mirror-1804-$GITHUB_REF_NAME.deb"
    - name: Publish artifacts
      uses: actions/upload-artifact@master
      with:
        name: acr-mirror-deb-18.04
        path: target/debian/*.deb
  build_2004:
    name: Build Ubuntu-20.04
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Run tests
      run: cargo test --verbose
    - name: Install tools
      run: cargo install cargo-deb
    - name: Package
      run: |
        cargo deb --output "target/debian/acr-mirror-2004-$GITHUB_REF_NAME-${GITHUB_SHA::5}.deb"
    - name: Publish artifacts
      uses: actions/upload-artifact@master
      with:
        name: acr-mirror-deb-20.04
        path: target/debian/*.deb
  build_2204:
    name: Build Ubuntu-22.04
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Run tests
      run: cargo test --verbose
    - name: Install tools
      run: cargo install cargo-deb
    - name: Package
      run: |
        cargo deb --output "target/debian/acr-mirror-2204-$GITHUB_REF_NAME-${GITHUB_SHA::5}.deb"
    - name: Publish artifacts
      uses: actions/upload-artifact@master
      with:
        name: acr-mirror-deb-22.04
        path: target/debian/*.deb
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ "build_1804", "build_2004" ]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download Artifacts 18.04
        uses: actions/download-artifact@master
        with:
          name: acr-mirror-deb-18.04
          path: build/
      - name: Download Artifacts 20.04
        uses: actions/download-artifact@master
        with:
          name: acr-mirror-deb-20.04
          path: build/
      - name: Download Artifacts 22.04
        uses: actions/download-artifact@master
        with:
          name: acr-mirror-deb-22.04
          path: build/
      - name: Release
        uses: fnkr/github-action-ghr@v1
        env:
          GHR_PATH: build/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GHR_DRAFT: yes
